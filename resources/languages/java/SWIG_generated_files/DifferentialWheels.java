/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cyberbotics.webots.controller;

public class DifferentialWheels extends Robot {
  private transient long swigCPtr;

  protected DifferentialWheels(long cPtr, boolean cMemoryOwn) {
    super(wrapperJNI.DifferentialWheels_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DifferentialWheels obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        wrapperJNI.delete_DifferentialWheels(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DifferentialWheels() {
    this(wrapperJNI.new_DifferentialWheels(), true);
  }

  public void setSpeed(double left, double right) {
    wrapperJNI.DifferentialWheels_setSpeed(swigCPtr, this, left, right);
  }

  public double getLeftSpeed() {
    return wrapperJNI.DifferentialWheels_getLeftSpeed(swigCPtr, this);
  }

  public double getRightSpeed() {
    return wrapperJNI.DifferentialWheels_getRightSpeed(swigCPtr, this);
  }

  public double getMaxSpeed() {
    return wrapperJNI.DifferentialWheels_getMaxSpeed(swigCPtr, this);
  }

  public double getSpeedUnit() {
    return wrapperJNI.DifferentialWheels_getSpeedUnit(swigCPtr, this);
  }

  public void enableEncoders(int samplingPeriod) {
    wrapperJNI.DifferentialWheels_enableEncoders(swigCPtr, this, samplingPeriod);
  }

  public void disableEncoders() {
    wrapperJNI.DifferentialWheels_disableEncoders(swigCPtr, this);
  }

  public int getEncodersSamplingPeriod() {
    return wrapperJNI.DifferentialWheels_getEncodersSamplingPeriod(swigCPtr, this);
  }

  public double getLeftEncoder() {
    return wrapperJNI.DifferentialWheels_getLeftEncoder(swigCPtr, this);
  }

  public double getRightEncoder() {
    return wrapperJNI.DifferentialWheels_getRightEncoder(swigCPtr, this);
  }

  public void setEncoders(double left, double right) {
    wrapperJNI.DifferentialWheels_setEncoders(swigCPtr, this, left, right);
  }

}
